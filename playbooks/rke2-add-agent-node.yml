- name: install rke2 agent node
  hosts: all:!~infra0[1-3] # Including all hosts and excluding the master nodes.
  become: true
  vars:
    - WATCHDIR: "/var/lib/rancher/rke2/server/manifests"
    - CONFDIR: "/etc/rancher/rke2"
    - CONFFILE: "{{ CONFDIR }}/config.yaml"
    - SERVER_FAILOVER_IP: "192.168.0.222"
    - SERVER_ADDRESS_SHORT: "rke2"
    - SERVER_ADDRESS_FQDN: "rke2.superasian.net"
    - INSTALL_RKE2_VERSION: "v1.28.10+rke2r1"
    - INTERFACE: "enp3s0"
    - VIP: "{{ SERVER_FAILOVER_IP }}"
    - CONTAINER_RUNTIME_ENDPOINT: "unix:///run/k3s/containerd/containerd.sock"
    - CONTAINERD_ADDRESS: "/run/k3s/containerd/containerd.sock"
    - KUBE_VIP_IMAGE: "docker.io/plndr/kube-vip"
    - KUBE_VIP_IMAGE_TAG: "latest"
    - TOKEN: "K10653a7c8cf586f22251311b0c69e8151c48cc964d678dcb5993a8b78e4cba3d61::server:54e9a99066c9c879449e388e7e1633be"

  tasks:
  - name: create directories if they don't exist
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
      recurse: yes
    loop:
      - "{{ CONFDIR }}"

  - name: get hostname short
    shell: |
      hostname -s
    register: hostname_short
  - name: hostname fqdn
    shell: |
      hostname -f
    register: hostname_fqdn

  - name: Print hostname fqdn and short
    debug:
      msg:
      - "hostname short '{{ hostname_short.stdout }}'"
      - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"

  - name: Creating the config.yaml
    copy:
      dest: "{{ CONFFILE }}"
      content: |
        token: {{ TOKEN }}
        server: https://{{ SERVER_ADDRESS_FQDN }}:9345
        
  - name: Installing rke2 agent
    shell: |
      curl -sfL https://get.rke2.io | INSTALL_RKE2_CHANNEL=stable INSTALL_RKE2_VERSION="{{ INSTALL_RKE2_VERSION }}" sh -
    notify: "rke2-agent service start"

  handlers:
  - name: Make sure a service unit is running
    systemd:
      state: started
      name: rke2-agent
    listen: "rke2-agent service start"

  - name: Make sure a service unit is restarted
    ansible.builtin.systemd:
      state: restarted
      name: rke2-agent
    listen: "rke2-agent service restart"
