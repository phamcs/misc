- name: install rke2 server
  hosts: all
  become: true
  vars:
    - WATCHDIR: "/var/lib/rancher/rke2/server/manifests"
    - CONFDIR: "/etc/rancher/rke2"
    - CONFFILE: "{{ CONFDIR }}/config.yaml"
    - SERVER_FAILOVER_IP: "192.168.0.202"
    - SERVER_ADDRESS_SHORT: "rke2vip"
    - SERVER_ADDRESS_FQDN: "rke2vip.superasian.net"
    - INSTALL_RKE2_VERSION: "v1.28.10+rke2r1"
    - INTERFACE: "enp3s0"
    - VIP: "{{ SERVER_FAILOVER_IP }}"
    - CONTAINER_RUNTIME_ENDPOINT: "unix:///run/k3s/containerd/containerd.sock"
    - CONTAINERD_ADDRESS: "/run/k3s/containerd/containerd.sock"
    - TOKEN: "K108a788cf0a2db367da2b906d3cae6b13da9555371d56ebb817b1917bc86b738d0::server:185d8a49a0a013af369cdd9845ace43a"

  tasks:
  - name: create directories if they don't exist
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
      recurse: yes
    loop:
      - "{{ CONFDIR }}"
      - "{{ WATCHDIR }}"

  - name: get hostname short
    shell: |
      hostname -s
    register: hostname_short
  - name: hostname fqdn
    shell: |
      hostname -f
    register: hostname_fqdn

  - name: Print hostname fqdn and short
    debug:
      msg:
      - "hostname short '{{ hostname_short.stdout }}'"
      - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"

  - name: Creating the config.yaml
    copy:
      dest: "{{ CONFFILE }}"
      content: |
        token: {{ TOKEN }}
        server: https://{{ SERVER_ADDRESS_FQDN }}:9345
        tls-san:
          - "{{ hostname_short.stdout }}"
          - "{{ hostname_fqdn.stdout }}"
          - "{{ SERVER_ADDRESS_SHORT }}"
          - "{{ SERVER_ADDRESS_FQDN }}"
          - "{{ SERVER_FAILOVER_IP }}"
    notify: "rke2-server service restart"

  - name: Installing rke2 server
    shell: |
      curl -sfL https://get.rke2.io | INSTALL_RKE2_CHANNEL=stable INSTALL_RKE2_VERSION="{{ INSTALL_RKE2_VERSION }}" sh -
    notify: "rke2-server service start"

  handlers:
  - name: Make sure a service unit is running
    systemd:
      state: started
      name: rke2-server
    listen: "rke2-server service start"

  - name: Make sure a service unit is restarted
    ansible.builtin.systemd:
      state: restarted
      name: rke2-server
    listen: "rke2-server service restart"
