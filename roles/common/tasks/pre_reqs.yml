---

# Debian full system upgrade
- name: Debian system updates
  ansible.builtin.apt:
    update_cache: yes
    upgrade: dist
    autoremove: yes
  register: apt_update_result
  when:
    - ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

# Redhat full system upgrade
- name: "[RHEL] Update packages"
  ansible.builtin.dnf:
    update_cache: yes
    name: "*"
    state: latest
    exclude: "{{ gbt_packages_versionlock|d() }}"
    use_backend: dnf4
  register: _gbt_packages_update_output
  when:
    - ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'

# Output for debug
- name: "[RHEL] [INFO] Print installed/updated packages"
  when: _gbt_packages_update_output.skipped is not defined
  ansible.builtin.debug:
    var: _gbt_packages_update_output.results|d()

- name: Check for reboot-required file
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Notify handler if reboot is required
  ansible.builtin.debug:
    msg: "Reboot is required for {{ inventory_hostname }}"
  when: reboot_required_file.stat.exists == true
  notify: Reboot host

# Disable Firewalld
- name: Disable FIREWALLD
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
    enabled: false
  when:
    - ansible_facts.services["firewalld.service"] is defined
    - ansible_facts.services["firewalld.service"].status != "not-found"
  notify: "Restart {{ service_name }}"

# Install omvextra & compose
- name: Install omvextra & compose
  ansible.builtin.shell:
    cmd: |
      apt update && apt install -y wget curl git htop bmon lm-sensors strace
      wget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash
      apt update && apt install -y openmediavault-compose
  when:
    - ansible_os_family == 'Debian'

# Create AppData Directory
- name: Create apps directory
  ansible.builtin.file:
    path: "{{ app_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ app_user }}"
    recurse: yes

